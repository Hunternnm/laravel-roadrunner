#!/usr/bin/env php
<?php

use Hunternnm\LaravelRoadrunner\RoadrunnerLaravelBridge;
use Illuminate\Http\Request;
use Spiral\RoadRunner;
use Nyholm\Psr7;
use Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory;

ini_set('display_errors', 'stderr');
require 'vendor'.DIRECTORY_SEPARATOR.'autoload.php';

$worker = RoadRunner\Worker::create();
$psrFactory = new Psr7\Factory\Psr17Factory();

$worker = new RoadRunner\Http\PSR7Worker($worker, $psrFactory, $psrFactory, $psrFactory);
$app = require 'bootstrap'.DIRECTORY_SEPARATOR.'app.php';
$rr = new RoadrunnerLaravelBridge($app, __DIR__);
$httpFoundationFactory = new HttpFoundationFactory();

while ($req = $worker->waitRequest()) {
    try {
        $symfonyRequest = $httpFoundationFactory->createRequest($req);
        $request = Request::createFromBase($symfonyRequest);

        $response = $rr->request($request);

        $rsp = new Psr7\Response();
        $rsp->getBody()->write($response->getContent());

        $worker->respond($rsp);

    } catch (Throwable $e) {
        echo $e->getMessage();
    }
}
